# Multi-stage Dockerfile for Indexer Service

# Stage 1: Build stage
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git make gcc musl-dev

# Set working directory
WORKDIR /build

# Copy go workspace and modules
COPY go.work go.work
COPY shared/ shared/
COPY services/indexer-service/ services/indexer-service/

# Download dependencies
WORKDIR /build/services/indexer-service
RUN go mod download

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -ldflags="-w -s" -o indexer-service ./cmd/main.go

# Stage 2: Runtime stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1000 indexer && \
    adduser -D -u 1000 -G indexer indexer

# Set working directory
WORKDIR /app

# Copy binary from builder
COPY --from=builder /build/services/indexer-service/indexer-service .

# Change ownership
RUN chown -R indexer:indexer /app

# Switch to non-root user
USER indexer

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Run the application
ENTRYPOINT ["./indexer-service"]

